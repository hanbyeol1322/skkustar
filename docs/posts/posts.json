[
  {
    "path": "posts/2021-03-18-saleprice-prediction/",
    "title": "saleprice prediction",
    "description": "응용통계학 hw3",
    "author": [
      {
        "name": "hanbyeol",
        "url": {}
      }
    ],
    "date": "2021-03-18",
    "categories": [],
    "contents": "\nlibrary\n\n\ncode\n\nlibrary(tibble)\nlibrary(tidyverse)\nlibrary(reprex)\nlibrary(tibble)\nlibrary(purrr)\nlibrary(tidyr)\nlibrary(magrittr)\nlibrary(xlsx)\nlibrary(corrplot)\n\n\n\n1. 데이터 불러오기\n\n\ncode\n\ntrain <- read_csv(\"/cloud/project/_posts/2021-03-18-saleprice-prediction/train.csv\")\ntest <- read_csv(\"/cloud/project/_posts/2021-03-18-saleprice-prediction/test.csv\")\n\ntrain_tb <- as_tibble(train)\n\n\n\n2. 상관계수가 높은 변수 선택\n\n\ncode\n\ntrain_num <- dplyr::select_if(train, is.numeric)\nnumericVars <- which(sapply(train, is.numeric))\ntrain_numVar <- train[, numericVars]\ncor_numVar <- cor(train_numVar, use='pairwise.complete.obs')\ncor_sorted <- as.matrix(sort(cor_numVar[, 'SalePrice'], decreasing = TRUE))\nCorHigh <- names(which(apply(cor_sorted, 1, function(x) abs(x) > 0.5)))\ncor_numVar <- cor_numVar[CorHigh, CorHigh]\n\ncorrplot.mixed(cor_numVar, \n               tl.col = 'black',   \n               tl.pos = 'lt',      \n               number.cex = .7)    \n\n\n\n\nhw2에서 확인한 변수와 SalePrice와 높은 상관관계를 가진 4개 변수 선택\nOverallQual\nGrLivArea\nGarageArea\nYearBuilt\n3. Linear Model사용\n\n\ncode\n\nlm.fit = lm(SalePrice ~OverallQual + GrLivArea + GarageArea + YearBuilt, data = train_tb)\nsummary(lm.fit)\n\n\n\nCall:\nlm(formula = SalePrice ~ OverallQual + GrLivArea + GarageArea + \n    YearBuilt, data = train_tb)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-409387  -21263   -2265   17878  298574 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -8.238e+05  8.516e+04  -9.673   <2e-16 ***\nOverallQual  2.311e+04  1.162e+03  19.893   <2e-16 ***\nGrLivArea    5.570e+01  2.603e+00  21.397   <2e-16 ***\nGarageArea   5.760e+01  6.257e+00   9.206   <2e-16 ***\nYearBuilt    3.815e+02  4.476e+01   8.523   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 39630 on 1455 degrees of freedom\nMultiple R-squared:  0.7518,    Adjusted R-squared:  0.7512 \nF-statistic:  1102 on 4 and 1455 DF,  p-value: < 2.2e-16\n\ncode\n\nplot(lm.fit)\n\n\n\n\n4. outlier 없애기\n\n\ncode\n\nlm.fit = lm(SalePrice ~-1 + OverallQual + GrLivArea + GarageArea + YearBuilt, data = train_tb[-c(524, 692, 899, 1183, 1299),])\nsummary(lm.fit)\n\n\n\nCall:\nlm(formula = SalePrice ~ -1 + OverallQual + GrLivArea + GarageArea + \n    YearBuilt, data = train_tb[-c(524, 692, 899, 1183, 1299), \n    ])\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-131449  -20964   -1456   18407  214756 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \nOverallQual 27083.585    958.555   28.25   <2e-16 ***\nGrLivArea      51.462      2.412   21.34   <2e-16 ***\nGarageArea     79.145      5.521   14.34   <2e-16 ***\nYearBuilt     -50.563      2.318  -21.82   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 36480 on 1451 degrees of freedom\nMultiple R-squared:  0.9652,    Adjusted R-squared:  0.9651 \nF-statistic: 1.005e+04 on 4 and 1451 DF,  p-value: < 2.2e-16\n\ncode\n\nplot(lm.fit)\n\n\n\n\n5. test data에 적용해서 집 값을 예측한다.\n\n\ncode\n\npred <- predict(lm.fit, test, interval = \"confidence\")\nhead(pred)\n\n\n       fit      lwr      upr\n1 140150.1 135067.7 145232.4\n2 156585.7 154076.1 159095.4\n3 156423.6 153301.2 159546.0\n4 181220.3 179228.2 183212.5\n5 221866.3 217414.0 226318.6\n6 181723.3 179620.9 183825.8\n\n6. 결과 값을 실제 값과 비교\n\n\ncode\n\n# write.csv(pred, \"C:/Users/hanby/Documents/21as/new.csv\")\n\n\n\n\n\n\n",
    "preview": "posts/2021-03-18-saleprice-prediction/saleprice-prediction_files/figure-html5/unnamed-chunk-3-1.png",
    "last_modified": "2021-03-18T15:36:09+00:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/2021-03-10-hw2/",
    "title": "AmesHousing",
    "description": "응용통계학 hw2",
    "author": [
      {
        "name": "hanbyeol",
        "url": {}
      }
    ],
    "date": "2021-03-10",
    "categories": [],
    "contents": "\nlibrary\n\n\ncode\n\nlibrary(tidyverse)\nlibrary(AmesHousing)\nlibrary(ggplot2)\n\n\n\n1. Square Feet & Garage Area & Sale Price\n집 평수가 넓을수록 주차공간이 넓지 않을까?\n\n\ncode\n\nGC <- guide_legend(title = \"Garage Cars\", ncol = 7)\names_raw %>% \n  mutate(Square_Feet=`1st Flr SF`+`2nd Flr SF`) %>% \n  ggplot() + geom_point(aes(x=`Square_Feet`,y=`Garage Area`,color=as_factor(`Garage Cars`), alpha=0.3, size=`SalePrice`))+\n  scale_color_brewer(palette = \"Set1\", labels = c(\"0\", \"1\", \"2\", \"3\", \"4\",\"5\",\"NA\"))+ \n  scale_alpha_identity(0.3) + \n  guides(color = GC) +\n  theme(legend.position = \"bottom\")\n\n\n\n\n1층과 2층 square feet를 더해서 집 평수를 계산하였다. 집 평수와 주차공간은 양의 관계를 보이며 차고에 자동차 수가 많아짐을 볼 수 있다. 또한 집 평수가 넓어질수록 집의 가격(point size)가 커짐을 확인 할 수 있다.\n2. Heating QC & Year Built & Sale Price\n난방시설이 잘 되어있을수록 집 값이 높지 않을까? 난방시설을 그룹화해서 평균 집 값을 보자!\n\nEx: Excellent\nGd: Good\nTA: Average/Typical\nFa: Fair\nPo: Poor\n\n\n\ncode\n\names_raw %>% \n  group_by(`Heating QC`) %>%\n  summarise(across(SalePrice,mean,na.rm=TRUE))\n\n\n# A tibble: 5 x 2\n  `Heating QC` SalePrice\n  <chr>            <dbl>\n1 Ex             216367.\n2 Fa             122950.\n3 Gd             156855.\n4 Po              69033.\n5 TA             138985.\n\n난방시설의 quality가 좋을수록 평균 집 가격이 높다는 것이 확인되었다.\n또한 집이 최신에 지어질 수록 난방시절이 좋을 것 같다고 생각하고 각 quality별로 지어진 가장 최근년도를 보았다.\n\n\ncode\n\names_raw %>% \n  group_by(`Heating QC`) %>%\n  summarise(across(`Year Built`,max,na.rm=TRUE))\n\n\n# A tibble: 5 x 2\n  `Heating QC` `Year Built`\n  <chr>               <int>\n1 Ex                   2010\n2 Fa                   1978\n3 Gd                   2009\n4 Po                   1952\n5 TA                   1992\n\n확인결과 최근에 지어질수록 난방시설이 좋아지고 집 가격이 올라갈 것이라고 생각하고, ggplot 을 이용하여 연도별 sale price에 대한 난방시설 그래프를 그려보았다.\n\n\ncode\n\nhqc <- guide_legend(title = \"Heating Quality and Condition\", nrow = 5)\names_raw %>% \n  group_by(`Heating QC`) %>%\n  ggplot(aes(x=`Year Built`,y=SalePrice)) + \n  geom_point(aes(color=as_factor(`Heating QC`),alpha=0.3))+\n  scale_color_brewer(palette = \"Set1\", labels = c(\"Fair\", \"Typical\", \"Excellent\", \"Good\", \"Poor\"))+ \n  scale_alpha_identity(0.3) + \n  guides(color = hqc) +\n  theme(legend.position = \"right\")\n\n\n\n\n위 그래프들을 난방 종류에 따라 나누어본다.\n\n\ncode\n\nhqc <- guide_legend(title = \"Heating Quality and Condition\", nrow = 5)\names_raw %>% \n  group_by(`Heating QC`) %>%\n  ggplot(aes(x=`Year Built`,y=SalePrice)) + \n  geom_point(aes(color=as_factor(`Heating QC`),alpha=0.3))+\n  scale_color_brewer(palette = \"Set1\",\n                     labels = c(\"Fair\", \"Typical\", \"Excellent\", \"Good\", \"Poor\"))+ \n  scale_alpha_identity(0.3) + \n  guides(color = hqc) +\n  theme(legend.position = \"right\") + facet_wrap(~`Heating`)\n\n\n\n\n난방 종류별로 나누어본 결과 난방시설이 Excellent(초록색점)인 것은 모두 GasA(Gas forced warm air furnace를 사용하고 있는 것을 알 수 있다. 또한 최근으로 갈수록 GasA Type의 집을 많이 짓는다는 것을 확인 할 수있다(색이 짙어짐). 그럼 AmesHousing dataset을 GasA인 것만 필터링하여 살펴 보자.\n3. GasA & Kitchen Quality & Central Air Conditioning\nGasA로 난방을 사용하는 집안의 다른 시설 보기.\n\n\ncode\n\names_raw %>% \n         filter(Heating==\"GasA\") %>% \n         ggplot(aes(x=`Kitchen Qual`,y=SalePrice,color=`Kitchen Qual`)) + \n  geom_boxplot()+\n  facet_wrap(~ `Central Air`)\n\n\n\n\n같은 난방시설(GasA)을 사용하는 주방시설의 Quality도 중앙 에어컨(? 중앙제어 난방이라고 이해했음..)이 아닌 개별로 에어컨을 사용할 수 있는 것이 같은 Kitchen Quality에서도 집 값이 높다는 것을 확인 할 수 있다.\n4. 결론\n집 평수가 넓어질수록 주차를 할 수 있는 공간이 넓어지며 차고의 자동차 갯수가 증가하고, 집 가격도 상승한다.\nHeating Quality가 좋은(Excellent)집은 모두 GasA type이며 최근으로 갈수록 GasA Type의 집을 많이 짓고 있다.\n같은 난방시설과 난방 유형을 가진 집에서도 중앙에어컨인 경우보다 개별적으로 조절할 수 있는 집의 가격이 더 높다.\n\n\n\n",
    "preview": "posts/2021-03-10-hw2/hw2_files/figure-html5/unnamed-chunk-1-1.png",
    "last_modified": "2021-03-18T15:35:47+00:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/2021-03-07-first-writing/",
    "title": "Chooser Option Payoff: r code",
    "description": "보험금융투자론",
    "author": [
      {
        "name": "hanbyeol",
        "url": {}
      }
    ],
    "date": "2021-03-07",
    "categories": [],
    "contents": "\nchooser option pay-off R code\n1. chooser option factors\nS0 <- 100\nK <- 100\n\ns <- 1000\ninterval <- 500\n\nT_t <- 0.7/(interval)\nt <- 0.3\nr <-0.03\nsigma <- 0.5\nmu <- r-(0.5*sigma^2)\n\nset.seed(1234)\n2. random number\nrnd.num <- as.data.frame(matrix(rnorm(s*interval), nrow=s, ncol=interval))\n\n3. 누적 수익률 만들기\nxx <- as.data.frame(matrix(data=0, nrow=s, ncol=interval+1))\nfor ( i in 1:s){ for ( j in 1:interval){\nxx[i,j+1] <- xx[i,j] + (mu*(T_t)+(sigma*sqrt(T_t)*rnd.num[i,j]))  \n}\n}\n4. t시점에서 option의 가치\nresult <- matrix(NA, s, 1)\n\nfor (i in 1:s){\n    result[i,1] <- (max(0, S0*exp(xx[i,151])-K*exp(-r*0.7),max(0, K*exp(-r*0.7)-S0*exp(xx[i,151]))))\n  \n}\n\n\npayoff <- result\nST <- matrix(S0*exp(xx[,150]))\nplot(ST, payoff)\n\n\nmean(result[1:s,1])\n\n\nplot(x=seq(1,500,1), y=xx[999, 2:501], type=\"l\", xlab = \"interval\", ylab = \"Yield\", main = \"999th Stock Price\")\nplot(x <- sort(rnorm(47)), type = \"s\", main = \"plot(x, type = \\\"s\\\")\")\npoints(x, cex = .5, col = \"dark red\")\n5. 블랙숄즈 공식과 비교, t시점에서 option의 가치\nchooser_option <- function(s, k, r, T, t, sigma){\n  d1 <- (log(s/k)+(r+0.5*sigma^2)*T)/(sigma*sqrt(T))\n  d2 <- d1-sigma*sqrt(T)\n  d1_c <- (log(s/k)+(r+0.5*sigma^2)*t)/(sigma*sqrt(t))\n  d2_c <- d1_c-sigma*sqrt(t)\n  value <- s*pnorm(d1)-k*exp(-r*T)*pnorm(d2)-s*pnorm(-d1_c)+k*exp(-r*T)*pnorm(-d2_c)\n  return(value)\n}\n\nchooser_option(100, 100, 0.03, 1, 0.3, 0.2)\n참고: call\ncalloption <- function(s, k, r, T, sigma){\n  d1 <- (log(s/k)+(r+0.5*sigma^2)*T)/(sigma*sqrt(T))\n  d2 <- d1-sigma*sqrt(T)\n  value <- s*pnorm(d1)-k*exp(-r*T)*pnorm(d2)\n  return(value)\n  \n}\n\ncalloption(100, 100, 0.03, 1, 0.2)\n참고: put\nputoption <- function(s, k, r, T, sigma){\n  d1 <- (log(s/k)+(r+0.5*sigma^2)*T)/(sigma*sqrt(T))\n  d2 <- d1-sigma*sqrt(T)\n  value <- k*exp(-r*T)*pnorm(-d2)-s*pnorm(-d1)\n  return(value)\n  \n}\n\nputoption(100, 100, 0.03, 1, 0.2)\n\n\n\n\n",
    "preview": {},
    "last_modified": "2021-03-10T13:25:54+00:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-03-07-lec2/",
    "title": "ggplot2",
    "description": "응용통계학 lec2",
    "author": [
      {
        "name": "hanbyeol",
        "url": {}
      }
    ],
    "date": "2021-03-07",
    "categories": [],
    "contents": "\n\n\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(palmerpenguins)\n\n\n\n6가지 중요한 dplyr\n1. filter(): 특정 조건을 만족하는 것을 필터링\n\n\n    penguins %>%\n        filter(species==\"Chinstrap\") %>% \n  head()\n\n\n# A tibble: 6 x 8\n  species   island bill_length_mm bill_depth_mm flipper_length_mm\n  <fct>     <fct>           <dbl>         <dbl>             <int>\n1 Chinstrap Dream            46.5          17.9               192\n2 Chinstrap Dream            50            19.5               196\n3 Chinstrap Dream            51.3          19.2               193\n4 Chinstrap Dream            45.4          18.7               188\n5 Chinstrap Dream            52.7          19.8               197\n6 Chinstrap Dream            45.2          17.8               198\n# … with 3 more variables: body_mass_g <int>, sex <fct>, year <int>\n\nand 조건\n\n\n    penguins %>%\n        filter(species==\"Chinstrap\",island==\"Dream\") %>% \n  head()\n\n\n# A tibble: 6 x 8\n  species   island bill_length_mm bill_depth_mm flipper_length_mm\n  <fct>     <fct>           <dbl>         <dbl>             <int>\n1 Chinstrap Dream            46.5          17.9               192\n2 Chinstrap Dream            50            19.5               196\n3 Chinstrap Dream            51.3          19.2               193\n4 Chinstrap Dream            45.4          18.7               188\n5 Chinstrap Dream            52.7          19.8               197\n6 Chinstrap Dream            45.2          17.8               198\n# … with 3 more variables: body_mass_g <int>, sex <fct>, year <int>\n\nlogical operator쓰면\n\n\n    penguins %>% \n        filter((species==\"Chinstrap\"|species==\"Adelie\")&island==\"dream\") %>% \n  head()\n\n\n# A tibble: 0 x 8\n# … with 8 variables: species <fct>, island <fct>,\n#   bill_length_mm <dbl>, bill_depth_mm <dbl>,\n#   flipper_length_mm <int>, body_mass_g <int>, sex <fct>, year <int>\n\nor조건\n\n\n    penguins %>%\n        filter(species %in% c(\"Chinstrap\",\"Adelie\"))\n\n\n# A tibble: 220 x 8\n   species island    bill_length_mm bill_depth_mm flipper_length_mm\n   <fct>   <fct>              <dbl>         <dbl>             <int>\n 1 Adelie  Torgersen           39.1          18.7               181\n 2 Adelie  Torgersen           39.5          17.4               186\n 3 Adelie  Torgersen           40.3          18                 195\n 4 Adelie  Torgersen           NA            NA                  NA\n 5 Adelie  Torgersen           36.7          19.3               193\n 6 Adelie  Torgersen           39.3          20.6               190\n 7 Adelie  Torgersen           38.9          17.8               181\n 8 Adelie  Torgersen           39.2          19.6               195\n 9 Adelie  Torgersen           34.1          18.1               193\n10 Adelie  Torgersen           42            20.2               190\n# … with 210 more rows, and 3 more variables: body_mass_g <int>,\n#   sex <fct>, year <int>\n\n    penguins %>%\n        filter(species %in% c(\"Chinstrap\",\"Adelie\"),island==\"dream\") %>% \n      head()\n\n\n# A tibble: 0 x 8\n# … with 8 variables: species <fct>, island <fct>,\n#   bill_length_mm <dbl>, bill_depth_mm <dbl>,\n#   flipper_length_mm <int>, body_mass_g <int>, sex <fct>, year <int>\n\nQ.Adelie이거나 Gentoo이면서 bill lenth가 30에서 100 사이인 것은?\nA.filter사용시\n\n\n    penguins %>% \n        filter(species %in% c(\"Adelie\",\"Gentoo\"),\n               bill_length_mm>30 & bill_length_mm<100) %>% \n        nrow()\n\n\n[1] 274\n\n2. select(): column을 기준으로하는 operator\n\n\n    penguins %>% \n        select(species,bill_length_mm,bill_depth_mm) %>% \n        head()\n\n\n# A tibble: 6 x 3\n  species bill_length_mm bill_depth_mm\n  <fct>            <dbl>         <dbl>\n1 Adelie            39.1          18.7\n2 Adelie            39.5          17.4\n3 Adelie            40.3          18  \n4 Adelie            NA            NA  \n5 Adelie            36.7          19.3\n6 Adelie            39.3          20.6\n\n해당 열(species)을 제외하고 선택해줘\n\n\n    penguins %>% \n        select(-species) %>% \n        head()\n\n\n# A tibble: 6 x 7\n  island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n  <fct>              <dbl>         <dbl>             <int>       <int>\n1 Torgersen           39.1          18.7               181        3750\n2 Torgersen           39.5          17.4               186        3800\n3 Torgersen           40.3          18                 195        3250\n4 Torgersen           NA            NA                  NA          NA\n5 Torgersen           36.7          19.3               193        3450\n6 Torgersen           39.3          20.6               190        3650\n# … with 2 more variables: sex <fct>, year <int>\n\n여러개의 연속적인 열을 선택해줘\n\n\n    penguins %>% \n        select(bill_length_mm:body_mass_g) %>% \n  head()\n\n\n# A tibble: 6 x 4\n  bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n           <dbl>         <dbl>             <int>       <int>\n1           39.1          18.7               181        3750\n2           39.5          17.4               186        3800\n3           40.3          18                 195        3250\n4           NA            NA                  NA          NA\n5           36.7          19.3               193        3450\n6           39.3          20.6               190        3650\n\n특정조건을 만족시키는 열을 선택해줘\n\n\n    penguins %>% \n        select(ends_with(\"mm\")) %>% \n        names()\n\n\n[1] \"bill_length_mm\"    \"bill_depth_mm\"     \"flipper_length_mm\"\n\n내가 선택한 순서대로 선택해줘(선택한것빼고 나머지st)\n\n\n    penguins %>% \n        select(island,bill_length_mm,everything()) %>% \n        head()\n\n\n# A tibble: 6 x 8\n  island    bill_length_mm species bill_depth_mm flipper_length_mm\n  <fct>              <dbl> <fct>           <dbl>             <int>\n1 Torgersen           39.1 Adelie           18.7               181\n2 Torgersen           39.5 Adelie           17.4               186\n3 Torgersen           40.3 Adelie           18                 195\n4 Torgersen           NA   Adelie           NA                  NA\n5 Torgersen           36.7 Adelie           19.3               193\n6 Torgersen           39.3 Adelie           20.6               190\n# … with 3 more variables: body_mass_g <int>, sex <fct>, year <int>\n\n3. mutate(): 새로운 변수를 만들어 열을 추가 할 때\n\n\n   penguins %>% \n        select(species,bill_length_mm,bill_depth_mm) %>% \n        mutate(bill_total=bill_length_mm + bill_depth_mm) %>% \n        head()\n\n\n# A tibble: 6 x 4\n  species bill_length_mm bill_depth_mm bill_total\n  <fct>            <dbl>         <dbl>      <dbl>\n1 Adelie            39.1          18.7       57.8\n2 Adelie            39.5          17.4       56.9\n3 Adelie            40.3          18         58.3\n4 Adelie            NA            NA         NA  \n5 Adelie            36.7          19.3       56  \n6 Adelie            39.3          20.6       59.9\n\n새로 만든 변수를 바로 쓸수도 있다!\n\n\n    penguins %>% \n        select(species,bill_length_mm,bill_depth_mm) %>% \n        mutate(bill_total=bill_length_mm + bill_depth_mm,\n               bill_average=bill_total/2) %>% \n        head()\n\n\n# A tibble: 6 x 5\n  species bill_length_mm bill_depth_mm bill_total bill_average\n  <fct>            <dbl>         <dbl>      <dbl>        <dbl>\n1 Adelie            39.1          18.7       57.8         28.9\n2 Adelie            39.5          17.4       56.9         28.4\n3 Adelie            40.3          18         58.3         29.2\n4 Adelie            NA            NA         NA           NA  \n5 Adelie            36.7          19.3       56           28  \n6 Adelie            39.3          20.6       59.9         30.0\n\ntransmutate(): 새롭게 만든 변수만 선택하고 나머지는 버림\n\n\n    penguins %>% \n        select(species,bill_length_mm,bill_depth_mm) %>% \n        transmute(bill_total=bill_length_mm + bill_depth_mm,\n                  bill_average=bill_total/2) %>% \n        head()\n\n\n# A tibble: 6 x 2\n  bill_total bill_average\n       <dbl>        <dbl>\n1       57.8         28.9\n2       56.9         28.4\n3       58.3         29.2\n4       NA           NA  \n5       56           28  \n6       59.9         30.0\n\n4. arrange(): data를 정렬하는 함수, 기본은 오름차순\n\n\npenguins %>%\n\nselect(species,bill_length_mm,bill_depth_mm) %>%\n\nmutate(bill_length_mm=ceiling(bill_length_mm),\n\nbill_depth_mm=ceiling(bill_depth_mm)) %>%\n\narrange(bill_length_mm)\n\n\n# A tibble: 344 x 3\n   species bill_length_mm bill_depth_mm\n   <fct>            <dbl>         <dbl>\n 1 Adelie              33            16\n 2 Adelie              34            19\n 3 Adelie              34            18\n 4 Adelie              34            17\n 5 Adelie              35            19\n 6 Adelie              35            22\n 7 Adelie              35            19\n 8 Adelie              35            18\n 9 Adelie              35            19\n10 Adelie              35            18\n# … with 334 more rows\n\nbill_length_mm이 겹치면 bill_depth_mm으로 정렬하라\n\n\npenguins %>%\n\nselect(species,bill_length_mm,bill_depth_mm) %>%\n\nmutate(bill_length_mm=ceiling(bill_length_mm),\n\nbill_depth_mm=ceiling(bill_depth_mm)) %>%\n\narrange(bill_length_mm,bill_depth_mm)\n\n\n# A tibble: 344 x 3\n   species bill_length_mm bill_depth_mm\n   <fct>            <dbl>         <dbl>\n 1 Adelie              33            16\n 2 Adelie              34            17\n 3 Adelie              34            18\n 4 Adelie              34            19\n 5 Adelie              35            18\n 6 Adelie              35            18\n 7 Adelie              35            18\n 8 Adelie              35            19\n 9 Adelie              35            19\n10 Adelie              35            19\n# … with 334 more rows\n\nbill_length_mm이 겹치면 bill_depth_mm으로 “내림차순”으로 정렬하라\n\n\npenguins %>%\n  select(species,bill_length_mm,bill_depth_mm) %>%\n  mutate(bill_length_mm=ceiling(bill_length_mm),bill_depth_mm=ceiling(bill_depth_mm)) %>%\n\n  arrange(bill_length_mm, desc(bill_depth_mm))\n\n\n# A tibble: 344 x 3\n   species bill_length_mm bill_depth_mm\n   <fct>            <dbl>         <dbl>\n 1 Adelie              33            16\n 2 Adelie              34            19\n 3 Adelie              34            18\n 4 Adelie              34            17\n 5 Adelie              35            22\n 6 Adelie              35            19\n 7 Adelie              35            19\n 8 Adelie              35            19\n 9 Adelie              35            18\n10 Adelie              35            18\n# … with 334 more rows\n\n5. summarize(): 기존의 값으로 새로운 변수를 만들어서 요약해서 보여줌\n\n\npenguins %>%\n\nsummarise(bill_length_mean = mean(bill_length_mm, na.rm = TRUE),\n\nbill_depth_mean = mean(bill_depth_mm, na.rm = TRUE))\n\n\n# A tibble: 1 x 2\n  bill_length_mean bill_depth_mean\n             <dbl>           <dbl>\n1             43.9            17.2\n\n그룹을 만들어서 새로운 변수를 만들고 요약해서 보여줌\n\n\npenguins %>%\n\ngroup_by(species) %>%\n\nsummarise(bill_depth_mean=mean(bill_depth_mm,na.rm=TRUE),\n\nbill_length_mean=mean(bill_length_mm,na.rm=TRUE))\n\n\n# A tibble: 3 x 3\n  species   bill_depth_mean bill_length_mean\n  <fct>               <dbl>            <dbl>\n1 Adelie               18.3             38.8\n2 Chinstrap            18.4             48.8\n3 Gentoo               15.0             47.5\n\n6. across(): 여러개의 column에 같은 함수를 적용할 때(cf.col별로 새로운 변수를 만들었음)\nacross가 없을 때\n\n\npenguins %>%\n\ngroup_by(species) %>%\n\nsummarise(bill_depth_mean=mean(bill_depth_mm,na.rm=TRUE),\n\nbill_length_mean=mean(bill_length_mm,na.rm=TRUE),\n\nflipper_length_mean=mean(flipper_length_mm,na.rm=TRUE))\n\n\n# A tibble: 3 x 4\n  species   bill_depth_mean bill_length_mean flipper_length_mean\n  <fct>               <dbl>            <dbl>               <dbl>\n1 Adelie               18.3             38.8                190.\n2 Chinstrap            18.4             48.8                196.\n3 Gentoo               15.0             47.5                217.\n\nacross를 사용하면\n\n\npenguins %>%\n\ngroup_by(species) %>%\n\nsummarise(across(bill_length_mm:flipper_length_mm,mean,na.rm=TRUE))\n\n\n# A tibble: 3 x 4\n  species   bill_length_mm bill_depth_mm flipper_length_mm\n  <fct>              <dbl>         <dbl>             <dbl>\n1 Adelie              38.8          18.3              190.\n2 Chinstrap           48.8          18.4              196.\n3 Gentoo              47.5          15.0              217.\n\n\n\n\n",
    "preview": {},
    "last_modified": "2021-03-18T15:36:29+00:00",
    "input_file": {}
  }
]
